<**/*.ml{,i}>: warn(-40), no_alias_deps
<**/*>: thread
# This prevents the implicit addition of -ppx options by ocamlfind
<**/*.ml{,i}>: predicate(ppx_driver)
<src/*>: linkall
<**/*.ml{,i}>: warn(-40), no_alias_deps
<**/*>: thread
# This prevents the implicit addition of -ppx options by ocamlfind
<**/*.ml{,i}>: predicate(ppx_driver)
<src/*>: linkall


# Library ppx_jsobject_conv
# "src/ppx_jsobject_conv.cmxs": use_ppx_jsobject_conv
<src/*.ml{,i,y}>: package(ppx_core)
<src/*.ml{,i,y}>: package(ppx_tools.metaquot)
<src/*.ml{,i,y}>: package(ppx_type_conv)
<src/*.ml{,i,y}>: package(result)
<src/*.ml{,i,y}>: package(js_of_ocaml)


<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic

<ppx_bin_prot>: -traverse
<ppx_compare>: -traverse
<ppx_sexp_conv>: -traverse
<ppx_type_conv>: -traverse
<ppx_variants_conv>: -traverse

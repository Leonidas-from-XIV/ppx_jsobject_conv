true: bin_annot, safe_string, debug, warn(-58)

<**/*.ml{,i}>: no_alias_deps
# This prevents the implicit addition of -ppx options by ocamlfind
<**/*.ml{,i}>: predicate(ppx_driver)

"src": include

<bin/*>: predicate(ppx_driver)
<bin/*>: linkall
<bin/*>: thread
<bin/*.{ml,byte}>: package(ppx_type_conv), package(ppx_driver)

<src/*>: warn(@A)
<src/ppx_jsobject_conv.ml{,i}>: package(ppx_core), package(ppx_tools.metaquot), package(ppx_type_conv)
<src/ppx_jsobject_conv_runtime.ml{,i}>: package(result), package(js_of_ocaml)

<src_test/*>:  warn(@5@8@10@11@12@14@23@24@26@29@40)
<src_test/*.{ml,byte,native}>: debug, package(js_of_ocaml), package(js_of_ocaml.ppx), package(result), use_ppx_jsobject_conv

".git": -traverse
".git": not_hygienic

<ppx_bin_prot>: -traverse
<ppx_compare>: -traverse
<ppx_sexp_conv>: -traverse
<ppx_type_conv>: -traverse
<ppx_variants_conv>: -traverse
<ppx_core>: -traverse

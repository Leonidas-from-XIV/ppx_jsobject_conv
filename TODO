
1b) strict_option_types -- only convert null as None?
5) auto tests

8) simple objects translations?
9) functions:
      - for callbacks, that should receive js objects, convert it to wrapped functions,
        where wrapper will convert types;

10) defaults -- implement by this lib or leave it to logic?
    (can be hard if there is no optional types in record)
    not to hard to implement for basic types: add ?default arg and pass it in codegen
    not sure about complex types, where should typechecking be implemented?

Related problems, but probably out of the scope:
   Convert function({a:{}, b:{}, c:{}}), where some of the keys may be absent,
   to fun ?a ?b ?c
